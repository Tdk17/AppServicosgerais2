// GENERATED CODE - DO NOT MODIFY BY HAND
// This code was generated by ObjectBox. To update it run the generator again:
// With a Flutter package, run `flutter pub run build_runner build`.
// With a Dart package, run `dart run build_runner build`.
// See also https://docs.objectbox.io/getting-started#generate-objectbox-code

// ignore_for_file: camel_case_types

import 'dart:typed_data';

import 'package:flat_buffers/flat_buffers.dart' as fb;
import 'package:objectbox/internal.dart'; // generated code can access "internal" functionality
import 'package:objectbox/objectbox.dart';
import 'package:objectbox_flutter_libs/objectbox_flutter_libs.dart';

import '../model/servicos.dart';

export 'package:objectbox/objectbox.dart'; // so that callers only have to import this file

final _entities = <ModelEntity>[
  ModelEntity(
      id: const IdUid(1, 8489462735688654838),
      name: 'Servicos',
      lastPropertyId: const IdUid(8, 1340627254130035445),
      flags: 0,
      properties: <ModelProperty>[
        ModelProperty(
            id: const IdUid(1, 7054967416711257064),
            name: 'id',
            type: 6,
            flags: 1),
        ModelProperty(
            id: const IdUid(2, 1019429952946126155),
            name: 'solicitante',
            type: 9,
            flags: 0),
        ModelProperty(
            id: const IdUid(3, 4857898899383988404),
            name: 'equipamento',
            type: 9,
            flags: 0),
        ModelProperty(
            id: const IdUid(4, 7256596770899412304),
            name: 'marca',
            type: 9,
            flags: 0),
        ModelProperty(
            id: const IdUid(5, 3375897104735661237),
            name: 'modelo',
            type: 9,
            flags: 0),
        ModelProperty(
            id: const IdUid(6, 5499391942522751222),
            name: 'series',
            type: 9,
            flags: 0),
        ModelProperty(
            id: const IdUid(7, 3499441437876717450),
            name: 'descricaoProblema',
            type: 9,
            flags: 0),
        ModelProperty(
            id: const IdUid(8, 1340627254130035445),
            name: 'descricaoRealizada',
            type: 9,
            flags: 0)
      ],
      relations: <ModelRelation>[],
      backlinks: <ModelBacklink>[])
];

/// Open an ObjectBox store with the model declared in this file.
Future<Store> openStore(
        {String? directory,
        int? maxDBSizeInKB,
        int? fileMode,
        int? maxReaders,
        bool queriesCaseSensitiveDefault = true,
        String? macosApplicationGroup}) async =>
    Store(getObjectBoxModel(),
        directory: directory ?? (await defaultStoreDirectory()).path,
        maxDBSizeInKB: maxDBSizeInKB,
        fileMode: fileMode,
        maxReaders: maxReaders,
        queriesCaseSensitiveDefault: queriesCaseSensitiveDefault,
        macosApplicationGroup: macosApplicationGroup);

/// ObjectBox model definition, pass it to [Store] - Store(getObjectBoxModel())
ModelDefinition getObjectBoxModel() {
  final model = ModelInfo(
      entities: _entities,
      lastEntityId: const IdUid(1, 8489462735688654838),
      lastIndexId: const IdUid(0, 0),
      lastRelationId: const IdUid(0, 0),
      lastSequenceId: const IdUid(0, 0),
      retiredEntityUids: const [],
      retiredIndexUids: const [],
      retiredPropertyUids: const [],
      retiredRelationUids: const [],
      modelVersion: 5,
      modelVersionParserMinimum: 5,
      version: 1);

  final bindings = <Type, EntityDefinition>{
    Servicos: EntityDefinition<Servicos>(
        model: _entities[0],
        toOneRelations: (Servicos object) => [],
        toManyRelations: (Servicos object) => {},
        getId: (Servicos object) => object.id,
        setId: (Servicos object, int id) {
          object.id = id;
        },
        objectToFB: (Servicos object, fb.Builder fbb) {
          final solicitanteOffset = object.solicitante == null
              ? null
              : fbb.writeString(object.solicitante!);
          final equipamentoOffset = object.equipamento == null
              ? null
              : fbb.writeString(object.equipamento!);
          final marcaOffset =
              object.marca == null ? null : fbb.writeString(object.marca!);
          final modeloOffset =
              object.modelo == null ? null : fbb.writeString(object.modelo!);
          final seriesOffset =
              object.series == null ? null : fbb.writeString(object.series!);
          final descricaoProblemaOffset = object.descricaoProblema == null
              ? null
              : fbb.writeString(object.descricaoProblema!);
          final descricaoRealizadaOffset = object.descricaoRealizada == null
              ? null
              : fbb.writeString(object.descricaoRealizada!);
          fbb.startTable(9);
          fbb.addInt64(0, object.id);
          fbb.addOffset(1, solicitanteOffset);
          fbb.addOffset(2, equipamentoOffset);
          fbb.addOffset(3, marcaOffset);
          fbb.addOffset(4, modeloOffset);
          fbb.addOffset(5, seriesOffset);
          fbb.addOffset(6, descricaoProblemaOffset);
          fbb.addOffset(7, descricaoRealizadaOffset);
          fbb.finish(fbb.endTable());
          return object.id;
        },
        objectFromFB: (Store store, ByteData fbData) {
          final buffer = fb.BufferContext(fbData);
          final rootOffset = buffer.derefObject(0);

          final object = Servicos(
              solicitante: const fb.StringReader(asciiOptimization: true)
                  .vTableGetNullable(buffer, rootOffset, 6),
              equipamento: const fb.StringReader(asciiOptimization: true)
                  .vTableGetNullable(buffer, rootOffset, 8),
              marca: const fb.StringReader(asciiOptimization: true)
                  .vTableGetNullable(buffer, rootOffset, 10),
              modelo: const fb.StringReader(asciiOptimization: true)
                  .vTableGetNullable(buffer, rootOffset, 12),
              series: const fb.StringReader(asciiOptimization: true)
                  .vTableGetNullable(buffer, rootOffset, 14),
              descricaoProblema: const fb.StringReader(asciiOptimization: true)
                  .vTableGetNullable(buffer, rootOffset, 16),
              descricaoRealizada: const fb.StringReader(asciiOptimization: true)
                  .vTableGetNullable(buffer, rootOffset, 18))
            ..id = const fb.Int64Reader().vTableGet(buffer, rootOffset, 4, 0);

          return object;
        })
  };

  return ModelDefinition(model, bindings);
}

/// [Servicos] entity fields to define ObjectBox queries.
class Servicos_ {
  /// see [Servicos.id]
  static final id = QueryIntegerProperty<Servicos>(_entities[0].properties[0]);

  /// see [Servicos.solicitante]
  static final solicitante =
      QueryStringProperty<Servicos>(_entities[0].properties[1]);

  /// see [Servicos.equipamento]
  static final equipamento =
      QueryStringProperty<Servicos>(_entities[0].properties[2]);

  /// see [Servicos.marca]
  static final marca =
      QueryStringProperty<Servicos>(_entities[0].properties[3]);

  /// see [Servicos.modelo]
  static final modelo =
      QueryStringProperty<Servicos>(_entities[0].properties[4]);

  /// see [Servicos.series]
  static final series =
      QueryStringProperty<Servicos>(_entities[0].properties[5]);

  /// see [Servicos.descricaoProblema]
  static final descricaoProblema =
      QueryStringProperty<Servicos>(_entities[0].properties[6]);

  /// see [Servicos.descricaoRealizada]
  static final descricaoRealizada =
      QueryStringProperty<Servicos>(_entities[0].properties[7]);
}
